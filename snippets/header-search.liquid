{% comment %}
  Renders a header search modal. Should be used with 'header.liquid'

  Accepts:
  - input_id: {String} Id for the search input element (required)

  Usage:
  {% render 'header-search', input_id: 'My-Id'%}
{% endcomment %}

<div>
  <predictive-search
    class="search-modal__form"
    data-loading-text="{{ 'accessibility.loading' | t }}"
  >
    <form action="{{ routes.search_url }}" method="get" role="search" class="search search--inline">
      <div class="field">
        <input
          class="search__input field__input"
          id="{{ input_id }}"
          type="search"
          name="q"
          value="{{ search.terms | escape }}"
          placeholder="{{ 'general.search.search' | t }}"
          autocorrect="off"
          autocomplete="off"
          autocapitalize="off"
          spellcheck="false"
          role="combobox"
          aria-expanded="false"
          aria-owns="predictive-search-results"
          aria-controls="predictive-search-results"
          aria-haspopup="listbox"
          aria-autocomplete="list"
        >
        <label class="field__label animated-text" id="animated-text" for="{{ input_id }}">
          {{- 'general.search.search' | t -}}
        </label>
        <button class="search__button field__button" aria-label="{{ 'general.search.search' | t }}">
          <span class="svg-wrapper">
            {{ 'icon-search.svg' | inline_asset_content }}
          </span>
        </button>
      </div>

      <!-- Predictive Search Results Placeholder -->
      <div class="predictive-search predictive-search--header" tabindex="-1" data-predictive-search>
        {% render 'loading-spinner', class: 'predictive-search__loading-state' %}
      </div>

      <span class="predictive-search-status visually-hidden" role="status" aria-hidden="true"></span>
    </form>
  </predictive-search>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const element = document.querySelector('.frcp-wishlist-nav-link-wrapper');
    if (window.innerWidth < 500) {
      if (element) {
        element.remove();
      }
    }
  });

  document.addEventListener('DOMContentLoaded', () => {
    const texts = [
      'Personalize your space',
      'Search your style',
      'Find your home favourites',
      'Browse beautiful decor',
      'Design your home',
    ];
    let current = 0;
    const animatedText = document.getElementById('animated-text');

    function showNextText() {
      animatedText.classList.remove('fade-in');
      setTimeout(() => {
        current = (current + 1) % texts.length;
        animatedText.textContent = texts[current];
        animatedText.classList.add('fade-in');
      }, 1000);
    }

    animatedText.textContent = texts[current];
    animatedText.classList.add('fade-in');

    setInterval(showNextText, 3000);
  });
</script>
